"""Add username to users

Revision ID: bba1e43f205c
Revises: c9614f46acbf
Create Date: 2024-10-23 17:37:40.761635

"""
from alembic import op
import models as models
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bba1e43f205c'
down_revision = 'c9614f46acbf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role_permission_association', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('user_role_association', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=64), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(length=64), nullable=False))
        batch_op.add_column(sa.Column('profile_image_url', sa.String(length=64), nullable=False))
        batch_op.add_column(sa.Column('last_active_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False))
        batch_op.drop_constraint('users_first_name_key', type_='unique')
        batch_op.drop_constraint('users_last_name_key', type_='unique')
        batch_op.create_index('idx_username', ['username'], unique=False)
        batch_op.create_unique_constraint(batch_op.f('users_username_key'), ['username'])

    with op.batch_alter_table('workflow_conversation_variables', schema=None) as batch_op:
        batch_op.drop_index('workflow__conversation_variables_app_id_idx')
        batch_op.drop_index('workflow__conversation_variables_created_at_idx')
        batch_op.create_index(batch_op.f('workflow_conversation_variables_app_id_idx'), ['app_id'], unique=False)
        batch_op.create_index(batch_op.f('workflow_conversation_variables_created_at_idx'), ['created_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_username_key'), type_='unique')
        batch_op.drop_index('idx_username')
        batch_op.create_unique_constraint('users_last_name_key', ['last_name'])
        batch_op.create_unique_constraint('users_first_name_key', ['first_name'])
        batch_op.drop_column('last_active_at')
        batch_op.drop_column('profile_image_url')
        batch_op.drop_column('email')
        batch_op.drop_column('username')

    with op.batch_alter_table('user_role_association', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), autoincrement=False, nullable=False))

    with op.batch_alter_table('role_permission_association', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), autoincrement=False, nullable=False))
    # ### end Alembic commands ###
