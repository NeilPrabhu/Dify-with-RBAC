"""Add dataset_permissions_alt table

Revision ID: faeea328195d
Revises: 761a9cf1ae62
Create Date: 2024-12-05 10:57:40.503092

"""
from alembic import op
import models as models
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'faeea328195d'
down_revision = '761a9cf1ae62'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset_permissions_alt',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('has_permission', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('dataset_permissions_alt_permission_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('dataset_permissions_alt_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name='dataset_permission_alt_pkey'),
    sa.UniqueConstraint('dataset_id', 'user_id', 'permission_id', name='uq_dataset_user_permission_alt')
    )
    with op.batch_alter_table('dataset_permissions_alt', schema=None) as batch_op:
        batch_op.create_index('idx_dataset_permissions_alt_dataset_id', ['dataset_id'], unique=False)
        batch_op.create_index('idx_dataset_permissions_alt_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('dataset_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('account_id', models.types.StringUUID(), nullable=False))
        batch_op.add_column(sa.Column('tenant_id', models.types.StringUUID(), nullable=False))
        batch_op.drop_constraint('uq_dataset_user_permission', type_='unique')
        batch_op.create_index('idx_dataset_permissions_account_id', ['account_id'], unique=False)
        batch_op.create_index('idx_dataset_permissions_tenant_id', ['tenant_id'], unique=False)
        batch_op.drop_column('user_id')
        batch_op.drop_column('permission_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dataset_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_index('idx_dataset_permissions_tenant_id')
        batch_op.drop_index('idx_dataset_permissions_account_id')
        batch_op.create_unique_constraint('uq_dataset_user_permission', ['dataset_id', 'user_id', 'permission_id'])
        batch_op.drop_column('tenant_id')
        batch_op.drop_column('account_id')

    with op.batch_alter_table('dataset_permissions_alt', schema=None) as batch_op:
        batch_op.drop_index('idx_dataset_permissions_alt_user_id')
        batch_op.drop_index('idx_dataset_permissions_alt_dataset_id')

    op.drop_table('dataset_permissions_alt')
    # ### end Alembic commands ###
