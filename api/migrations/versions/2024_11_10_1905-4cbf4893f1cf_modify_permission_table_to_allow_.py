"""Modify Permission table to allow multiple actions for a resource

Revision ID: 4cbf4893f1cf
Revises: bba1e43f205c
Create Date: 2024-11-10 19:05:11.988665

"""
from alembic import op
import models as models
import sqlalchemy as sa
from models.types import StringUUID  # Ensure this import is correct


# revision identifiers, used by Alembic.
revision = '4cbf4893f1cf'
down_revision = 'bba1e43f205c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dataset_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', models.types.StringUUID(), nullable=False))
        batch_op.drop_index('idx_dataset_permissions_account_id')
        batch_op.drop_index('idx_dataset_permissions_tenant_id')
        batch_op.create_index('idx_dataset_permissions_user_id', ['user_id'], unique=False)
        batch_op.drop_column('account_id')
        batch_op.drop_column('tenant_id')

    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.drop_constraint('permissions_action_key', type_='unique')
        batch_op.drop_constraint('permissions_resource_key', type_='unique')
        batch_op.create_unique_constraint('_resource_action_uc', ['resource', 'action'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.drop_constraint('_resource_action_uc', type_='unique')
        batch_op.create_unique_constraint('permissions_resource_key', ['resource'])
        batch_op.create_unique_constraint('permissions_action_key', ['action'])

    with op.batch_alter_table('dataset_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('account_id', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.drop_index('idx_dataset_permissions_user_id')
        batch_op.create_index('idx_dataset_permissions_tenant_id', ['tenant_id'], unique=False)
        batch_op.create_index('idx_dataset_permissions_account_id', ['account_id'], unique=False)
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
