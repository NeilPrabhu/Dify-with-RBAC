"""make permissions generic

Revision ID: 102330464059
Revises: faeea328195d
Create Date: 2024-12-09 07:54:36.632990

"""
from alembic import op
import models as models
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '102330464059'
down_revision = 'faeea328195d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles_permissions_association',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('roles_permissions_association_permission_id_fkey')),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('roles_permissions_association_role_id_fkey')),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('roles_permissions_association_pkey'))
    )
    op.create_table('users_permissions_association',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('users_permissions_association_permission_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('users_permissions_association_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', name=op.f('users_permissions_association_pkey'))
    )
    with op.batch_alter_table('dataset_permissions_alt', schema=None) as batch_op:
        batch_op.drop_index('idx_dataset_permissions_alt_dataset_id')
        batch_op.drop_index('idx_dataset_permissions_alt_user_id')

    op.drop_table('dataset_permissions_alt')
    op.drop_table('role_permission_association')
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('resource_id', sa.String(), nullable=True))
        batch_op.drop_constraint('_resource_action_uc', type_='unique')
        batch_op.create_unique_constraint('_action_resource_resource_id_uc', ['action', 'resource', 'resource_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('profile_image_url',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=256),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('profile_image_url',
               existing_type=sa.String(length=256),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)

    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.drop_constraint('_action_resource_resource_id_uc', type_='unique')
        batch_op.create_unique_constraint('_resource_action_uc', ['resource', 'action'])
        batch_op.drop_column('resource_id')

    op.create_table('role_permission_association',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='role_permission_association_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_permission_association_role_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permission_association_pkey')
    )
    op.create_table('dataset_permissions_alt',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('dataset_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('has_permission', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='dataset_permissions_alt_permission_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='dataset_permissions_alt_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dataset_permission_alt_pkey'),
    sa.UniqueConstraint('dataset_id', 'user_id', 'permission_id', name='uq_dataset_user_permission_alt')
    )
    with op.batch_alter_table('dataset_permissions_alt', schema=None) as batch_op:
        batch_op.create_index('idx_dataset_permissions_alt_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_dataset_permissions_alt_dataset_id', ['dataset_id'], unique=False)

    op.drop_table('users_permissions_association')
    op.drop_table('roles_permissions_association')
    # ### end Alembic commands ###
